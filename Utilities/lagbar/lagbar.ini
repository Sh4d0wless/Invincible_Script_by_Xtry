[lagstuff]
method=ctcp
color=255
delay=10

[script]
n0=;___________________________________________
n1=; Invincible by Xtry
n2=; Lagbar System
n3=; mailto: InvincibleScript@yahoo.com
n4=;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
n5=
n6=menu @lag.win {
n7=  Run
n8=  .$iif(%stlag.bar = on,$style(1)) On Startup:set %conlag.bar off | set %stlag.bar on
n9=  .$iif(%conlag.bar = on,$style(1)) On Connect:set %conlag.bar on | set %stlag.bar off
n10=  Colors
n11=  .Red:{ lag.red }
n12=  .Blue:{ lag.blue }
n13=  .Green:{ lag.green }
n14=  .Yellow:{ lag.yellow }
n15=  .Orange:{ lag.orange }
n16=  .-
n17=  .Custom:{ lag.custom }
n18=  Delay
n19=  .Current $+($lag.delay,s):{ lag.stime }
n20=  -
n21=  $iif($active ischan,say lag):{ lag.msg }
n22=  Method
n23=  .$iif($readini($lag.spc($script),lagstuff,method) = Raw,$style(1) raw,raw):{ lag.method.raw }
n24=  .$iif($readini($lag.spc($script),lagstuff,method) = Ctcp,$style(1) ctcp,ctcp):{ lag.method.ctcp }
n25=  .-
n26=  .$iif($readini($lag.spc($script),lagstuff,method) = Notice,$style(1) notice,notice):{ lag.method.notice }
n27=  $iif($version >= 6.0,Network)
n28=  .Current $lower($scid($timer(.lag.chk).cid).network):{ echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) Currently checking your lag on Network $+ $cxs(3) : $+ $cxs(1) $+($chr(2),$scid($timer(.lag.chk).cid).network,$chr(2))  $+ $cxs(2) $+ Server $+ $cxs(3) : $+ $cxs(1) $+($chr(2),$scid($timer(.lag.chk).cid).server,$chr(2)) }
n29=  -
n30=  Close:{ gtzlagoff }
n31=}
n32=alias -l lag.bar {
n33=  window -phB +d @lag.win 0 0 115 22
n34=  tbwin Attach @lag.win
n35=  var %z = $dll($_tbwin,GetTBInfo,NOT_USED),%w = $gettok(%z,1,32),%h = $gettok(%z,2,32)
n36=  lagbar.size %w %h
n37=  tbwin OnSize /lagbar.size
n38=  lag.update
n39=  window -a @lag.win
n40=}
n41=alias -l lag.update {
n42=  if ($window(@lag.win)) {
n43=    var %l = $hget(txlag,curlag),%t = Lag : $lag.isms($hget(txlag,curlag))
n44=    drawrect -nrf @lag.win $rgb(face) 5 0 0 178 22
n45=    drawtext -nro @lag.win $rgb(text) Tahoma -6 $calc(60 - $int($width(%t, Tahoma, -6))) 4 %t
n46=    drawrect -nr @lag.win $rgb(text) 1 73 0 105 15
n47=    drawrect -nrf @lag.win $lag.color 1 74 1 $iif(%l > 10,$iif(%l != ??,101,0),$int($calc(%l * 10.1))) 13
n48=    drawdot @lag.win
n49=  }
n50=}
n51=alias lagbar.size { window @lag.win $calc($1 - 200) $int($calc(($2 - 22) / 1)) 178 15 }
n52=on ^*:notice:lag*:?: { 
n53=  if ($nick = $me) && ($2 isnum) && ($hget(txlag)) { 
n54=    hadd txlag curlag $calc($calc($ticks - $2) / 1000) 
n55=    lag.update
n56=    haltdef 
n57=  }
n58=  elseif (!$hget(txlag)) { 
n59=    lag.stop 
n60=    echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) Hash table error shutting down lag bar
n61=    haltdef
n62=  }
n63=}
n64=ctcp *:lag*:?:{ 
n65=  if ($nick = $me) && ($2 isnum) && ($hget(txlag)) {
n66=    hadd txlag curlag $calc($calc($ticks - $2) / 1000)
n67=    lag.update  
n68=    halt 
n69=  }
n70=  elseif (!$hget(txlag)) { 
n71=    lag.stop 
n72=    echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) Hash table error shutting down lag bar
n73=    halt
n74=  }
n75=}
n76=raw &421:*:{ 
n77=  if ($1 = $me) && ($2 isnum) { 
n78=    $iif($hget(txlag),hadd txlag curlag $calc($calc($ticks - $2) / 1000)) 
n79=    lag.update 
n80=  }
n81=  halt
n82=}
n83=alias lag.start {
n84=  if (!$readini($lag.spc($script),lagstuff,method)) { lag.method }
n85=  if (!$hget(txlag)) { 
n86=    hmake txlag 1 
n87=    hadd txlag curlag ??
n88=  } 
n89=  lag.bar 
n90=  lag.fill
n91=  lag.chk
n92=  set %xlagx.bar on
n93=}
n94=alias -l lag.method { 
n95=  $iif($input(Would you like to use a notice for lag check if not press no then a ctcp will be used you can also use the raw method from popup,8),writeini -n $lag.spc($script) lagstuff method notice,writeini $lag.spc($script) lagstuff method ctcp) 
n96=  lag.stop
n97=  $iif($server,lag.start)
n98=}
n99=alias -l _tbwin { 
n100=  if ($isfile($+($scriptdir,tbwin.dll))) {
n101=    return $lag.spc($+($scriptdir,tbwin.dll))
n102=  }
n103=  elseif ($findfile($mircdir,tbwin.dll,1)) {
n104=    return $lag.spc($ifmatch)
n105=  }
n106=  else {
n107=    lag.stop
n108=    .timer.lag.error $iif($version >= 6.0,-i) 2 5 echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) Couldn't locate tbwin.dll in your mIRC or script directory, please put tbwin.dll in your mIRC or script directory so lag bar can function!
n109=  }
n110=}
n111=alias -l lag.color { 
n112=  if ($readini($lag.spc($script),lagstuff,color)) {
n113=    return $ifmatch
n114=  }
n115=  else {
n116=    return $rgb(255,0,0)
n117=  }
n118=}
n119=alias -l lag.spc { return $+($chr(34),$1-,$chr(34)) }
n120=alias -l lag.red { writeini -n $lag.spc($script) lagstuff color $rgb(255,0,0) | lag.fill }
n121=alias -l lag.blue { writeini -n $lag.spc($script) lagstuff color $rgb(0,0,255) | lag.fill }
n122=alias -l lag.green { writeini -n $lag.spc($script) lagstuff color $rgb(12,240,30) | lag.fill }
n123=alias -l lag.yellow { writeini -n $lag.spc($script) lagstuff color $rgb(255,255,0) | lag.fill }
n124=alias -l lag.orange { writeini -n $lag.spc($script) lagstuff color $rgb(252,127,0) | lag.fill }
n125=alias -l lag.custom { writeini -n $lag.spc($script) lagstuff color $$input(Enter a custom rgb value which you can get by using $+($chr(36),rgb) identifier!,129) | lag.fill }
n126=alias -l tbwin { dll $_tbwin $1- }
n127=alias -l lag.chk { 
n128=  if ($readini($lag.spc($script),lagstuff,method) != raw) {
n129=    .timer.lag.chk $iif($version >= 6.0,-i) 0 $lag.delay $&
n130=      $+(lag.,$readini($lag.spc($script),lagstuff,method)) | lag.ignore.chk
n131=  } 
n132=  else { 
n133=    .timer.lag.chk $iif($version >= 6.0,-i) 0 $lag.delay $+(lag.,$readini($lag.spc($script),lagstuff,method))
n134=  }
n135=} 
n136=alias -l lag.delay { return $iif($readini($lag.spc($script),lagstuff,delay),$ifmatch,20) }
n137=alias lag.stime { 
n138=  writeini -n $lag.spc($script) lagstuff delay $$input(Delay in seconds to check lag recommended 10 or more seconds!,129)
n139=  lag.chk
n140=}
n141=alias -l lag.method.raw { writeini -n $lag.spc($script) lagstuff method raw | lag.stop | $iif($server,lag.start) }
n142=alias -l lag.method.ctcp { writeini -n $lag.spc($script) lagstuff method ctcp | lag.stop | $iif($server,lag.start) }
n143=alias -l lag.method.notice { writeini -n $lag.spc($script) lagstuff method notice | lag.stop | $iif($server,lag.start) }
n144=alias -l lag.ctcp { $iif($server,.ctcp $me lag $ticks) }
n145=alias -l lag.notice {  $iif($server,.notice $me lag $ticks) }
n146=alias -l lag.raw {  $iif($server,.raw $ticks) }
n147=alias -l lag.isms { if ($1 isnum) { return $+($1,s) } | else { return $1 } }
n148=alias -l lag.msg { $iif($active ischan,msg # Currently my lag is: $lag.isms($hget(txlag,curlag))) }
n149=alias lag.stop {
n150=  $iif($window(@lag.win),window -c @lag.win)
n151=  .timer.lag.chk off
n152=  set %xlagx.bar off
n153=  $iif($hget(txlag),hfree txlag)
n154=}
n155=on *:load: { 
n156=  if ($version >= 5.91) { 
n157=    lag.method 
n158=    echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) Lagbar loaded successfully, right click on lagbar for options! 
n159=  }
n160=  else {
n161=    echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) This needs mIRC version 5.91+ this is $version , this addon wont work unloading it!
n162=    .unload -rs " $+ $script $+ "
n163=  }
n164=}
n165=on *:connect:{
n166=  if (%conlag.bar = on) {
n167=    if ($version >= 6.0) && (!$window(@lag.win)) {
n168=      lag.start
n169=    }
n170=    elseif ($version = 5.91) {
n171=      lag.start
n172=    }
n173=  }
n174=  else halt
n175=}
n176=on *:unload:{ lag.stop | remini $lag.spc($script) lagstuff }
n177=on *:active:*:{ if ($version >= 6.0) && ($timer(.lag.chk)) && ($activecid != $timer(.lag.chk).cid) { scid $activecid lag.chk } }
n178=on *:disconnect:{ 
n179=  if ($version >= 6.0) { 
n180=    var %s = 1,%t 
n181=    while (%s <= $scon(0)) {
n182=      $iif($scon(%s).status = connected,inc %t)
n183=      inc %s
n184=    }
n185=    $iif(!%t,lag.stop)
n186=  }
n187=  elseif ($version = 5.91) {
n188=    lag.stop 
n189=  }
n190=}
n191=alias -l lag.fill {
n192=  if ($hget(txlag)) {
n193=    var %f = 1,%g = 50,%h = $hget(txlag,curlag)
n194=    while (%f <= 10) {
n195=      $+(.timer.lag.fill,$r(1,999)) -h 1 %g hadd txlag curlag %f  
n196=      $+(.timer.lag.fill2,$r(1,9999)) -h 1 $calc(%g + 1) lag.update
n197=      inc %f
n198=      inc %g 50
n199=    }
n200=  }
n201=  if ($hget(txlag)) {
n202=    var %i = 10,%j = 500
n203=    while (%i >= 0) {
n204=      $+(.timer.lag.clr,$r(1,999)) -h 1 %j hadd txlag curlag %i 
n205=      $+(.timer.lag.clr2,$r(1,9999)) -h 1 $calc(%j + 1) lag.update
n206=      dec %i
n207=      inc %j 50
n208=    }
n209=  }
n210=  .timer.lag.restore -h 1 1000 hadd txlag curlag %h
n211=  .timer.lag.restore2 -h 1 1050 lag.update
n212=}
n213=alias -l lag.ignore.chk { 
n214=  if ($ignore($address($me,5))) && (notice isin $ignore($ifmatch).type) {   
n215=    .timer.lag.error2 1 5 echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) You are ignoring notice from your self so lag bar won't work. Pls fix it then type $+ $cxs(1) /lag.start
n216=    lag.stop
n217=  }
n218=  elseif ($ignore($address($me,5))) && (ctcp isin $ignore($ifmatch).type) {
n219=    .timer.lag.error3 1 5 echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) You are ignoring ctcp from your self so lag bar won't work. Pls fix it then type $+ $cxs(1) /lag.start
n220=    lag.stop
n221=  }
n222=  elseif ($ignore(*!*@*)) && (notice isin $ignore($ifmatch).type) {
n223=    .timer.lag.error4 1 5 echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) You are ignoring notice *!*@* so lag bar won't work. Pls fix it then type $+ $cxs(1) /lag.start
n224=    lag.stop
n225=  }
n226=  elseif ($ignore(*!*@*)) && (ctcp isin $ignore($ifmatch).type) {
n227=    .timer.lag.error5 1 5 echo -a $cxs(3) $+  $+ %xsbrack $+  $+ $cxs(2) You are ignoring ctcp *!*@* so lag bar won't work. Pls fix it then type $+ $cxs(1) /lag.start
n228=    lag.stop
n229=  }
n230=}
n231=
n232=;___________________________________________________________________________
n233=; Copyright © 2000 - 2003 logos,scripts & codes. All rights reserved
n234=; Reproduction/distribution/alteration of this material in part or in full without prior consent is forbidden
n235=; Script author: Xtry on dalnet.
n236=; mailto: InvincibleScript@yahoo.com
n237=;¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
